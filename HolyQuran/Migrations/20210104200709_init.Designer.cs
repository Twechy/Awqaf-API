// <auto-generated />
using HolyQuran.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace HolyQuran.Migrations
{
    [DbContext(typeof(QuranDb))]
    [Migration("20210104200709_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("HolyQuran.Ayah", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("SorahId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SorahId");

                    b.ToTable("Ayat");
                });

            modelBuilder.Entity("HolyQuran.HolyReadingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("AgreedOn")
                        .HasColumnType("bit");

                    b.Property<int>("AyaNumber")
                        .HasColumnType("int");

                    b.Property<int>("AyahId")
                        .HasColumnType("int");

                    b.Property<string>("HolyRead")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReadInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReadView")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Reader")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AyahId");

                    b.ToTable("Reading");
                });

            modelBuilder.Entity("HolyQuran.HolyText", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AyaNumber")
                        .HasColumnType("int");

                    b.Property<int>("AyahId")
                        .HasColumnType("int");

                    b.Property<int>("Rawy")
                        .HasColumnType("int");

                    b.Property<int>("SurahId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AyahId")
                        .IsUnique();

                    b.ToTable("RawyText");
                });

            modelBuilder.Entity("HolyQuran.Reader", b =>
                {
                    b.Property<int>("Read")
                        .HasColumnType("int");

                    b.Property<string>("BirthDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeathDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameView")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RawyInfo")
                        .HasColumnType("int");

                    b.Property<int>("Rowat")
                        .HasColumnType("int");

                    b.HasKey("Read");

                    b.ToTable("Readers");
                });

            modelBuilder.Entity("HolyQuran.Sorah", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HolySurahNameAr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HolySurahNameEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Landing")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Suras");
                });

            modelBuilder.Entity("HolyQuran.Ayah", b =>
                {
                    b.HasOne("HolyQuran.Sorah", null)
                        .WithMany("Ayah")
                        .HasForeignKey("SorahId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HolyQuran.HolyReadingModel", b =>
                {
                    b.HasOne("HolyQuran.Ayah", null)
                        .WithMany("Readings")
                        .HasForeignKey("AyahId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("HolyQuran.HolyText", b =>
                {
                    b.HasOne("HolyQuran.Ayah", null)
                        .WithOne("RawyText")
                        .HasForeignKey("HolyQuran.HolyText", "AyahId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
